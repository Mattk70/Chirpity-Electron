name: Test Chirpity Compilation
run-name: ${{ github.actor }} is installing chirpity
on: [push,  workflow_dispatch]
jobs:
  Build-Chirpity:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest] #, ubuntu-latest] 
    env: 
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: Setup node
        uses: actions/setup-node@v3
        with:
            node-version: 20.0.x
      - run: echo "üçè Node setup status is ${{ job.status }}."
      
      - name: Install Python dependencies on macOS
        if: runner.os == 'macOS'
        run: brew install python@3.9
        
      - name: Install dependencies
        run: |
          npm install
          echo "Install's status is ${{ job.status }}."
      # Conditional build command for each OS
      - name: Build Electron application
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            npx electron-builder --win --x64
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            npx electron-builder --mac
          else
            npx electron-builder build --linux --x64
          fi
      - run: echo "Build status is ${{ job.status }}."
      - name: Check installer exists
        shell: bash
        run: |
          # Retrieve the version from package.json
          VERSION=$(jq -r '.version' package.json)
          # Construct the filename
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            FILENAME="chirpity Setup $VERSION.exe"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            FILENAME="chirpity Setup $VERSION.pkg"
          else
            FILENAME="chirpity Setup $VERSION.AppImage"
          fi
          # Check if the file exists
          if [ -f "./dist/$FILENAME" ]; then
            echo "Executable $FILENAME found in ./dist"
          else
            echo "Executable $FILENAME not found in ./dist" && exit 1
          fi
      - run: echo "File check status is ${{ job.status }}."

